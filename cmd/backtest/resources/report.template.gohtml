<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Report</title>
    <link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/stocktools/gui.css">
    <link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/annotations/popup.css">

    <script src="https://code.highcharts.com/stock/highstock.js"></script>
    <script src="https://code.highcharts.com/stock/modules/data.js"></script>

    <script src="https://code.highcharts.com/stock/indicators/indicators-all.js"></script>
    <script src="https://code.highcharts.com/stock/modules/drag-panes.js"></script>

    <script src="https://code.highcharts.com/modules/annotations-advanced.js"></script>
    <script src="https://code.highcharts.com/modules/price-indicator.js"></script>
    <script src="https://code.highcharts.com/modules/full-screen.js"></script>

    <script src="https://code.highcharts.com/modules/stock-tools.js"></script>

    <script src="https://code.highcharts.com/stock/modules/heikinashi.js"></script>
    <script src="https://code.highcharts.com/stock/modules/hollowcandlestick.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>

    <style>
        .graph {
            /*max-height: 700px;*/
            min-height: 600px;
        }

        .information {
            margin-top: 4em;
            margin-bottom: 4em;
        }

        .information > .row {
            margin-bottom: 1em;
        }
    </style>
</head>
<body>
<script>
    function createHighcharts(title, containerId, dataOHLC, openTradesData, closedTradesData) {
        let options = {
            plotOptions: {
                candlestick: {},
            },
            series: [
                {
                    type: 'candlestick',
                    id: containerId + '_graph',
                    name: title,
                    data: dataOHLC,
                    turboThreshold: 0,
                    color: '#c43a2d',
                    upColor: '#2eb832',
                },
                {
                    type: 'flags',
                    onSeries: containerId + '_graph',
                    shape: 'circlepin',
                    stackDistance: 30,
                    fillColor: '#e2cc0b',
                    y: -60,
                    states: {
                        inactive: {
                            enabled: false
                        }
                    },
                    data: openTradesData,
                },

                {
                    type: 'flags',
                    onSeries: containerId + '_graph',
                    shape: 'squarepin',
                    stackDistance: 30,
                    fillColor: '#13a690',
                    y: -90,
                    states: {
                        inactive: {
                            enabled: false
                        }
                    },
                    data: closedTradesData,
                },
            ],
            yAxis: [
                {
                    labels: {
                        align: 'left'
                    },
                    height: '100%',
                    resize: {
                        enabled: false
                    }
                },
            ],
        };
        Highcharts.stockChart(containerId, options);
    }
</script>

<div class="row">
    {{ range $k, $v := .GraphData }}
        <div id="container{{ $k }}" class="chart graph"></div>
        <script>
            createHighcharts({{ $v.Title}}, 'container{{ $k }}', {{ $v.CandlesJson }}, {{ $v.OpenTradesJson }}, {{ $v.ClosedTradesJson }})
        </script>
    {{end}}
</div>

<div class="container information">
    <div class="row">
        <div class="col-6">
            Процент успешных сделок:
        </div>
        <div class="col-6">
            {{ .DealsProfitPercent }} %
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            Исходный баланс:
        </div>
        <div class="col-6">
            {{ .InitialBalance }}
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            Финальный баланс:
        </div>
        <div class="col-6">
            {{ .FinalBalance }}
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            Абсолютная прибыль:
        </div>
        <div class="col-6">
            {{ .ProfitAmount }}
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            Прибыль:
        </div>
        <div class="col-6">
            {{ .ProfitPercentAmount }}%
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            Максимальный баланс:
        </div>
        <div class="col-6">
            {{ .MaxBalance }}
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            Минимальный баланс:
        </div>
        <div class="col-6">
            {{ .MinBalance }}
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            Максимальная просадка:
        </div>
        <div class="col-6">
            -{{ .MaxBalanceDropPercent }} %
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            Абсолютная максимальная просадка:
        </div>
        <div class="col-6">
            -{{ .MaxAbsoluteBalanceDrop }}
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            Стандартная ошибка:
        </div>
        <div class="col-6">
            {{ .StandardErrorPercent }} %
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            PROM (The pessimistic return on margin):
        </div>
        <div class="col-6">
            {{ .StandardErrorPercent }} %
        </div>
    </div>
</div>

</body>
</html>